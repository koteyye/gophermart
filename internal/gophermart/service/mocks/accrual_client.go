// Code generated by MockGen. DO NOT EDIT.
// Source: accrual.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	service "github.com/sergeizaitcev/gophermart/internal/gophermart/service"
)

// MockAccrualClient is a mock of AccrualClient interface.
type MockAccrualClient struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualClientMockRecorder
}

// MockAccrualClientMockRecorder is the mock recorder for MockAccrualClient.
type MockAccrualClientMockRecorder struct {
	mock *MockAccrualClient
}

// NewMockAccrualClient creates a new mock instance.
func NewMockAccrualClient(ctrl *gomock.Controller) *MockAccrualClient {
	mock := &MockAccrualClient{ctrl: ctrl}
	mock.recorder = &MockAccrualClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualClient) EXPECT() *MockAccrualClientMockRecorder {
	return m.recorder
}

// OrderInfo mocks base method.
func (m *MockAccrualClient) OrderInfo(ctx context.Context, order string) (*service.AccrualOrderInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrderInfo", ctx, order)
	ret0, _ := ret[0].(*service.AccrualOrderInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrderInfo indicates an expected call of OrderInfo.
func (mr *MockAccrualClientMockRecorder) OrderInfo(ctx, order interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrderInfo", reflect.TypeOf((*MockAccrualClient)(nil).OrderInfo), ctx, order)
}
